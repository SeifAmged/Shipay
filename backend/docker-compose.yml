version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: shipay_postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=${DB_NAME:-shipay_db}
      - POSTGRES_USER=${DB_USER:-shipay_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-shipay_password}
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - shipay_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-shipay_user} -d ${DB_NAME:-shipay_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: shipay_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - shipay_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: shipay_backend
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate --settings=shipay_project.settings_production &&
             python manage.py collectstatic --noinput --settings=shipay_project.settings_production &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 shipay_project.wsgi:application"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME:-shipay_db}
      - DB_USER=${DB_USER:-shipay_user}
      - DB_PASSWORD=${DB_PASSWORD:-shipay_password}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - ALLOWED_HOST=${ALLOWED_HOST:-localhost,127.0.0.1}
      - EMAIL_HOST=${EMAIL_HOST:-}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - shipay_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: shipay_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - shipay_network

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs_volume:
    driver: local

networks:
  shipay_network:
    driver: bridge
